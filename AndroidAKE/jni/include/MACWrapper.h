/* DO NOT EDIT THIS FILE - it is machine generated */
#include <jni.h>
/* Header for class com_example_androidake_MutualAuthenticateChip */

#ifndef _Included_com_example_androidake_MutualAuthenticateChip
#define _Included_com_example_androidake_MutualAuthenticateChip
#ifdef __cplusplus
extern "C" {
#endif
/*
 * Class:     com_example_androidake_MutualAuthenticateChip
 * Method:    prepareMACCPP
 * Signature: (Z)V
 */
JNIEXPORT void JNICALL Java_com_example_androidake_MutualAuthenticateChip_prepareMACCPP
  (JNIEnv *, jobject, jboolean);

/*
 * Class:     com_example_androidake_MutualAuthenticateChip
 * Method:    getEphemeralKeyCPP
 * Signature: (Z)Ljava/lang/String;
 */
JNIEXPORT jstring JNICALL Java_com_example_androidake_MutualAuthenticateChip_getEphemeralKeyCPP
  (JNIEnv *, jobject, jboolean);

/*
 * Class:     com_example_androidake_MutualAuthenticateChip
 * Method:    showKeyPair
 * Signature: (Z)Ljava/lang/String;
 */
JNIEXPORT jstring JNICALL Java_com_example_androidake_MutualAuthenticateChip_showKeyPair
  (JNIEnv *, jobject, jboolean);

/*
 * Class:     com_example_androidake_MutualAuthenticateChip
 * Method:    showPrivateKey
 * Signature: (Z)[B
 */
JNIEXPORT jbyteArray JNICALL Java_com_example_androidake_MutualAuthenticateChip_showPrivateKey
  (JNIEnv *, jobject, jboolean);

/*
 * Class:     com_example_androidake_MutualAuthenticateChip
 * Method:    getPublicKeyAnotherPartyCPP
 * Signature: (Z)Ljava/lang/String;
 */
JNIEXPORT jstring JNICALL Java_com_example_androidake_MutualAuthenticateChip_getPublicKeyAnotherPartyCPP
  (JNIEnv *, jobject, jboolean);

/*
 * Class:     com_example_androidake_MutualAuthenticateChip
 * Method:    setEphemeralAndPublicKeyFromPartyCPP
 * Signature: (ZLjava/lang/String;Ljava/lang/String;)V
 */
JNIEXPORT void JNICALL Java_com_example_androidake_MutualAuthenticateChip_setEphemeralAndPublicKeyFromPartyCPP
  (JNIEnv *, jobject, jboolean, jstring, jstring);

/*
 * Class:     com_example_androidake_MutualAuthenticateChip
 * Method:    setEphemeralKeyFromPartyCPP
 * Signature: (ZLjava/lang/String;)V
 */
JNIEXPORT void JNICALL Java_com_example_androidake_MutualAuthenticateChip_setEphemeralKeyFromPartyCPP
  (JNIEnv *, jobject, jboolean, jstring);

/*
 * Class:     com_example_androidake_MutualAuthenticateChip
 * Method:    prepareEncryptionCPP
 * Signature: (ZZ)[B
 */
JNIEXPORT jbyteArray JNICALL Java_com_example_androidake_MutualAuthenticateChip_prepareEncryptionCPP
  (JNIEnv *, jobject, jboolean, jboolean);

/*
 * Class:     com_example_androidake_MutualAuthenticateChip
 * Method:    getEncryptCertAndRCPP
 * Signature: (Z)[B
 */
JNIEXPORT jbyteArray JNICALL Java_com_example_androidake_MutualAuthenticateChip_getEncryptCertAndRCPP
  (JNIEnv *, jobject, jboolean);

/*
 * Class:     com_example_androidake_MutualAuthenticateChip
 * Method:    setEncryptionFromPartyCPP
 * Signature: (Z[B)V
 */
JNIEXPORT void JNICALL Java_com_example_androidake_MutualAuthenticateChip_setEncryptionFromPartyCPP
  (JNIEnv *, jobject, jboolean, jbyteArray);

/*
 * Class:     com_example_androidake_MutualAuthenticateChip
 * Method:    getSomeString
 * Signature: (Z)Ljava/lang/String;
 */
JNIEXPORT jstring JNICALL Java_com_example_androidake_MutualAuthenticateChip_getSomeString
  (JNIEnv *, jobject, jboolean);

/*
 * Class:     com_example_androidake_MutualAuthenticateChip
 * Method:    decodeEncryption
 * Signature: (Z[B)Z
 */
JNIEXPORT jboolean JNICALL Java_com_example_androidake_MutualAuthenticateChip_decodeEncryption
  (JNIEnv *, jobject, jboolean, jbyteArray);

/*
 * Class:     com_example_androidake_MutualAuthenticateChip
 * Method:    convertStringToByteArray
 * Signature: (Ljava/lang/String;)[B
 */
JNIEXPORT jbyteArray JNICALL Java_com_example_androidake_MutualAuthenticateChip_convertStringToByteArray
  (JNIEnv *, jobject, jstring);

/*
 * Class:     com_example_androidake_MutualAuthenticateChip
 * Method:    convertByteArrayToString
 * Signature: ([B)Ljava/lang/String;
 */
JNIEXPORT jstring JNICALL Java_com_example_androidake_MutualAuthenticateChip_convertByteArrayToString
  (JNIEnv *, jobject, jbyteArray);

/*
 * Class:     com_example_androidake_MutualAuthenticateChip
 * Method:    verifCertificateCPP
 * Signature: (Z)Z
 */
JNIEXPORT jboolean JNICALL Java_com_example_androidake_MutualAuthenticateChip_verifCertificateCPP
  (JNIEnv *, jobject, jboolean);

/*
 * Class:     com_example_androidake_MutualAuthenticateChip
 * Method:    computeSessionKeyCPP
 * Signature: (Z)V
 */
JNIEXPORT void JNICALL Java_com_example_androidake_MutualAuthenticateChip_computeSessionKeyCPP
  (JNIEnv *, jobject, jboolean);

/*
 * Class:     com_example_androidake_MutualAuthenticateChip
 * Method:    getSessionKeyCPP
 * Signature: (Z)[B
 */
JNIEXPORT jbyteArray JNICALL Java_com_example_androidake_MutualAuthenticateChip_getSessionKeyCPP
  (JNIEnv *, jobject, jboolean);

/*
 * Class:     com_example_androidake_MutualAuthenticateChip
 * Method:    setInitializatorCPP
 * Signature: (Z)V
 */
JNIEXPORT void JNICALL Java_com_example_androidake_MutualAuthenticateChip_setInitializatorCPP
  (JNIEnv *, jobject, jboolean);

/*
 * Class:     com_example_androidake_MutualAuthenticateChip
 * Method:    getPublicAnotherParty22CPP
 * Signature: (Z)Ljava/lang/String;
 */
JNIEXPORT jstring JNICALL Java_com_example_androidake_MutualAuthenticateChip_getPublicAnotherParty22CPP
  (JNIEnv *, jobject, jboolean);

#ifdef __cplusplus
}
#endif
#endif
